TAG: fearload-5-1-7-26
DATE: 06/20/2014
STAFF: sc
CHANGES: US60 - indiv. deletes, US154 - preserver property case
1) fearQC.py - QC deletes
2) fearload.config.default - add DELETE_RPT=${RPTDIR}/delete.rpt
      DELETE_SQL=${OUTPUTDIR}/delete.sql
3) fearQC.sh - change path of delete report/sql to current directory
     when running just QC
4) fearload.py - preserve property case, skip deletes (sql file created
     by fearQC.py
5) fearload.sh - check relationship bcp for empty file, with deletes
    there may not be any adds. Execute the delete sql file created by fearQC.py
TAG: fearload-5-1-7-25
DATE: 05/28/2014
STAFF: sc
CHANGES: US60 - enhance performance of QC script
1)fearQC.py - 
a) stop using #temp tables
b) use explicit MgiType keys (don't join)
c) break up unioned queries into individual queries

TAG: fearload-5-1-7-24
DATE: 05/23/2014
STAFF: sc
CHANGES: US138 - rework tempdb and how QC queries done in tempdb
- fearQC.py - filter out tempdb 0 values

TAG: fearload-5-1-7-23
TAG: fearload-5-1-7-22
DATE: 05/23/2014
STAFF: sc
CHANGES: US138 - rework tempdb and how QC queries done in tempdb
- fearQC.sh - tempdb, all ints, move indexing to python	
- fearQC.py - do some MGI ID checking outside of db e.g. can't add a numeric
   part of MGI1234 or XP_789 to tempdb because no colon to split on. create
   tempdb indexes after loading tempdb

TAG: fearload-5-1-7-21
TAG: fearload-5-1-7-20
DATE: 05/14/2014
STAFF: sc
CHANGES: US51 - support for organizer allele
1) fearQC.py - bug fixes
a) line count reported
b) primary ID not being reported

TAG: fearload-5-1-7-19
DATE: 05/14/2014
STAFF: sc
CHANGES: US51 - support for organizer allele
1) fearQC.py - restructured 2ndary ID queries to run faster

TAG: fearload-5-1-7-18
DATE: 05/12/2014
STAFF: sc
CHANGES: US51 - support for organizer allele
1) fearQC.py - added debug, only print chr mismatch header when mismatch exists

TAG: fearload-5-1-7-17
DATE: 05/09/2014
STAFF: sc
CHANGES: US51 - support for organizer allele
1) fearload.py - support for allele as organizer
2) fearQC.sh - added mgi type of organizer and participant to temp table
3) fearQC.py - support for mutation_involves QC checks
a) split ID checking into the following functions:
* def qcInvalidMgiPrefix() 
* qcOrgAllelePartMarker()
* qcOrgMarkerPartMarker()

TAG: fearload-5-1-7-16
DATE: 05/08/2014
STAFF: sc
CHANGES:
1) fearload.py - added case insensitive/stripped comparisons as we do in fearQC.py
   this was an oversight on my part and was not part of any testing for US10/25

TAG: fearload-5-1-7-15
DATE: 04/24/2014
STAFF: sc
CHANGES: TR11560 - US25, load changes
1) fearload.config.default - change NUM_COLUMNS=13 to NUM_COLUMNS=14
2) fearload.py  - add removal of score '+' sign when present (allow '-')
3) checkColumns.py - remove white space from tokens in line

TAG: fearload-5-1-7-15
DATE: 04/24/2014
STAFF: sc
CHANGES: TR11560 - US25, load changes
1) fearload.py - for property 'score' load '-' but not '+'
2) fearload.config.default - fix notetype key

TAG: fearload-5-1-7-14
DATE: 04/24/2014
STAFF: sc
CHANGES: TR11560 - US25, load changes
1) fearload.sh - check for empty bcp files and don't drop indexes/bcp/create
   indexes if files are empty.
2) fearload.py - fixed bug incrementing properties key (added a tab!)

TAG: fearload-5-1-7-13
DATE: 04/23/2014
STAFF: sc
CHANGES: TR11560 - US25, load changes
1) fearload.config.default - added:
a) NOTE_BCP, NOTECHUNK_BCP
b) RELATIONSHIP_NOTE_KEY
2) fearQC.sh -  echo only if not live run
3) fearload.sh - setup to run sanity checks from load, added bcpin of 
       properties and notes
4) fearload.py 
a) added processing of notes and properties
b) changed from readlines() to readline() for future perf improvement
 
TAG: fearload-5-1-7-12
TAG: fearload-5-1-7-11
DATE: 04/22/2014
STAFF: sc
CHANGES: TR11560 - US25, sanity checks only
1) fearQC.py - add sanity checks
2) fearQC.sh - if warning.rpt exists, cat it to stdout
3) fearload.config.default - added WARNING_RPT

TAG: fearload-5-1-7-10
DATE: 04/14/2014
STAFF: sc
CHANGES: TR11560 - US10 fearload
1) bad MGI ID  bug - results5 added

TAG: fearload-5-1-7-9
TAG: fearload-5-1-7-8
DATE: 04/08/2014
STAFF: sc
CHANGES: TR11560 - US10 fearload
1) fearQC.py
a) Added secondary MGI ID check, which was overlooked
b) Added some comments 
c) Non-MGI ID passing check bug
d) timing for performance debug which goes to fearQC.log

TAG: fearload-5-1-7-7
DATE: 04/08/2014
STAFF: sc
CHANGES: TR11560 - US10 fearload
1) Qual QC check bug - replace empty qual column with 'Not Specified'
2) Organizer ID check bug - Only Participant ID being check because of typo
3) Do case insensitive checks
4) commented out some debug

TAG: fearload-5-1-7-6
TAG: fearload-5-1-7-5
DATE: 04/01/2014
STAFF: sc
CHANGES: TR11560 - US10 fearload initial sanity/QC
1) Install - added deployment of runFearQC

TAG: fearload-5-1-7-4
DATE: 03/31/2014
STAFF: sc
CHANGES: TR11560 - US10 fearload initial sanity/QC
1) fearQC.sh - added create/drop of a tempdb table
2) fearQC.py - added to run QC reports specified in US10
3) fearload.py - make markerDict global, add usage
4) fearload.config.default - added:
* QC_RPT
* MGI_ID_TEMP_TABLE
* MGI_ID_BCP

TAG: fearload-5-1-7-3
TAG: fearload-5-1-7-2
DATE: 03/11/2014
STAFF: sc
CHANGES: TR11560 Feature Relationships project
1) Sanity Checks (File Integrity Checks) implemented
a) runFearQC
b) fearQC.sh 
c) checkColumns.py
2) HISTORY -added config for sanity checks
a) NUM_COLUMNS, REQUIRED_COLUMNS, MIN_LINES

TAG: fearload-5-1-7-1
DATE: 03/11/2014
STAFF: sc
CHANGES: TR11560 Feature Relationships project

